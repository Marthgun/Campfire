<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" 
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article lang="en">
<articleinfo>
  <title>API Reference</title>
</articleinfo>
<section>
<title>
Form/CampUtil</title>
<formalpara><title>SCRIPTNAME</title><para></para></formalpara>
<literallayout class="monospaced">
scriptname FrostUtil hidden
</literallayout>
<formalpara><title>OVERVIEW</title><para></para></formalpara>
<para>
 The `FrostUtil` script is the primary way most mods should interact with Frostfall and contains many helpful functions. To call any of the following functions, download the SDK and in your script include the line:
 &lt;pre&gt;import FrostUtil&lt;/pre&gt;
 Alternatively, you can call `FrostUtil.FunctionName()` without importing FrostUtil. }
</para>
</section>
<section>
<title>
FrostUtil/GetAPIVersion</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Get the FrostUtil API version number.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
float function GetAPIVersion() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The FrostUtil API version number. This is NOT the same thing as the version number of Frostfall.
 FrostUtil's API version number will increment only when changes have been made to the API itself.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
float ver = FrostUtil.GetAPIVersion()
</literallayout>
</section>
<section>
<title>
FrostUtil/GetFrostfallVersion</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Get the Frostfall mod version number.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
float function GetFrostfallVersion() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The Frostfall version number.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
float ver = FrostUtil.GetFrostfallVersion()
</literallayout>
</section>
<section>
<title>
FrostUtil/IsPlayerNearFire</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Whether or not the player is currently near a fire.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsPlayerNearFire() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 True if near a fire; false otherwise.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player near a fire?
bool near_fire = FrostUtil.IsPlayerNearFire()
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 This does NOT indicate if the player is near a heat source; there are heat sources
 that are not fires. Fires have special properties in Frostfall and Campfire, which 
 include drying the player when wet, and being able to cook food using a cooking pot.
</para>

<para>
 To determine if the player is near a heat source of any kind, use <link linkend="robo4">GetPlayerHeatSourceLevel</link>()
 instead.
</para>

<para>
 Keep in mind that Frostfall's Heat Source System only updates every 5 seconds. Therefore,
 the data returned by this function is not real-time.
</para>
</section>
<section>
<title>
FrostUtil/GetPlayerHeatSourceLevel</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 The level (size) of the player's current nearby heat source. 
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerHeatSourceLevel() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 Possible return values:
</para>
<itemizedlist><listitem><para> 0 = Player is not near a heat source.
</para></listitem><listitem><para> 1 = Current heat source is "small" (e.g. bowls of burning embers, "fragile" campfires in Campfire)
</para></listitem><listitem><para> 2 = Current heat source is "medium" (e.g. most campfires and other fireplaces)
</para></listitem><listitem><para> 3 = Current heat source is "large" (e.g. giant campfires, "roaring" campfires in Campfire)
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player near heat?
int heat = FrostUtil.GetPlayerHeatSourceLevel()
if heat &gt; 0
    debug.notification("Player is near a heat source!")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 This function does NOT determine if the heat source is a fire or not; there are heat sources
 that are not fires. To determine if the player is near a fire, use <link linkend="robo3">IsPlayerNearFire</link>().
</para>

<para>
 Keep in mind that Frostfall's Heat Source System only updates every 5 seconds. Therefore,
 the data returned by this function is not real-time.
</para>
</section>
<section>
<title>
FrostUtil/GetPlayerHeatSourceDistance</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 The distance from the player to the player's current nearby heat source. 
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
float function GetPlayerHeatSourceDistance() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<itemizedlist><listitem><para> 0.0 to 600.0 - The distance from the player to the heat source. Frostfall does not detect heat sources more than 600 units away.
</para></listitem><listitem><para> -1.0 - No current heat source detected.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;How far away is the heat source?
float dist = FrostUtil.GetPlayerHeatSourceDistance()
if dist &lt;= 300.0
    debug.notification("The player is really close to the heat source!")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 Keep in mind that Frostfall's Heat Source System only updates every 5 seconds. Therefore,
 the data returned by this function is not real-time.
</para>
</section>
<section>
<title>
FrostUtil/IsPlayerTakingShelter</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Whether or not the player is taking shelter underneath an outcropping / building. If the
 player is "sheltered", the player will dry off if wet, regardless of current weather conditions.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsPlayerTakingShelter() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 True if taking shelter, false if not.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player underneath something?
bool sheltered = FrostUtil.IsPlayerTakingShelter()
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 This function does not return true if the player is inside a Campfire-based tent; it only
 returns true if a ray emitting upward from the player's head collides with an obstruction.
 For tent detection, use <link linkend="robo0">CampUtil</link>.<link linkend="robo69">GetCurrentTent</link>().
</para>
</section>
<section>
<title>
FrostUtil/IsNearFastTravelException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Whether or not the player near a "fast travel exception". If a player is nearby one of these objects, the
 Exposure System will re-enable the player's Fast Travel controls. This is used in cases where there is an
 expectation for Fast Travel be enabled when near these objects (like Apocrypha's Black Books.)
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsNearFastTravelException() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 True if near a "fast travel exception" object, false if not.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player near a fast travel exception?
bool near_ft_exception = FrostUtil.IsNearFastTravelException()
</literallayout>
</section>
<section>
<title>
FrostUtil/GetCurrentTemperature</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the current area temperature, based on location, weather, weather severity, and time of day.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetCurrentTemperature() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<itemizedlist><listitem><para> Greater than 10: A "warm" area. Exposure will decrease. The higher the number, the faster it will decrease.
</para></listitem><listitem><para> 10: A "neutral" area. Exposure will not increase or decrease.
</para></listitem><listitem><para> Less than 10: A "cold" area. Exposure will increase. The lower the number, the faster it will increase.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
int temp = FrostUtil.GetCurrentTemperature()
if temp &lt; 10
    debug.notification("It's cold!")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 The return values of this function correspond very roughly with degrees celsius.
</para>
</section>
<section>
<title>
FrostUtil/GetCurrentWeatherActual</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the current weather somewhat more accurately than the default GetCurrentWeather() function.
 This function returns the outgoing weather if the weather is currently transitioning out (and thus is
 still currently visible). Otherwise, returns the current weather.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Weather function GetCurrentWeatherActual() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The current weather.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;What is the current weather, really?
Weather wthr = FrostUtil.GetCurrentWeatherActual()
</literallayout>
</section>
<section>
<title>
FrostUtil/GetWeatherClassificationActual</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the classification of the weather returned by <link linkend="robo9">GetCurrentWeatherActual</link>().
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetWeatherClassificationActual(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akWeather: The Weather to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The current weather classification.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;What is the current weather classification, really?
int class = FrostUtil.GetWeatherClassificationActual()
</literallayout>
</section>
<section>
<title>
FrostUtil/IsWeatherSevere</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 True if this weather is in the severe weather list that Frostfall maintains, false if not.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsWeatherSevere(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akWeather: The Weather to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 Whether or not this weather is severe.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
if FrostUtil.IsWeatherSevere(FrostUtil.<link linkend="robo9">GetCurrentWeatherActual</link>())
    debug.notification("Better stay indoors!")
endif
</literallayout>
</section>
<section>
<title>
FrostUtil/AddSevereWeather</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a weather to the severe weather list that Frostfall maintains.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddSevereWeather(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Add my custom blizzard to the severe weather list
FrostUtil.AddSevereWeather(my_crazy_blizzard)
</literallayout>
</section>
<section>
<title>
FrostUtil/RemoveSevereWeather</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Removes a weather from the severe weather list that Frostfall maintains. Only weather forms added
 to the list via <link linkend="robo12">AddSevereWeather</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveSevereWeather(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Remove my custom blizzard to the severe weather list
FrostUtil.RemoveSevereWeather(my_crazy_blizzard)
</literallayout>
</section>
<section>
<title>
FrostUtil/IsWeatherOvercast</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 True if this weather is in the overcast weather list that Frostfall maintains, false if not.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsWeatherOvercast(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akWeather: The Weather to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 Whether or not this weather is Overcast.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
if FrostUtil.IsWeatherOvercast(FrostUtil.<link linkend="robo9">GetCurrentWeatherActual</link>())
    debug.notification("Man, it's dreary out.")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 Weather in the overcast weather list must be marked with the "Cloudy" classification.
 This list is necessary because the base Skyrim game often uses the "Cloudy" classification to denote
 fog weathers instead of cloudy weathers, and Frostfall needs to be able to differentiate between them.
</para>
</section>
<section>
<title>
FrostUtil/AddOvercastWeather</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a weather to the overcast weather list that Frostfall maintains.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddOvercastWeather(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Add my custom weather to the overcast weather list
FrostUtil.AddOvercastWeather(my_dreary_weather)
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 Weather in the overcast weather list must be marked with the "Cloudy" classification.
 This list is necessary because the base Skyrim game often uses the "Cloudy" classification to denote
 fog weathers instead of cloudy weathers, and Frostfall needs to be able to differentiate between them.
</para>
</section>
<section>
<title>
FrostUtil/RemoveOvercastWeather</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Removes a weather from the overcast weather list that Frostfall maintains. Only weather forms added
 to the list via <link linkend="robo15">AddOvercastWeather</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveOvercastWeather(Weather akWeather) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Remove my custom weather from the overcast weather list
FrostUtil.RemoveOvercastWeather(my_dreary_weather)
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 Weather in the overcast weather list must be marked with the "Cloudy" classification.
 This list is necessary because the base Skyrim game often uses the "Cloudy" classification to denote
 fog weathers instead of cloudy weathers, and Frostfall needs to be able to differentiate between them.
</para>
</section>
<section>
<title>
FrostUtil/IsRefInOblivion</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Whether or not the reference is in a base game or DLC Oblivion worldspace.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsRefInOblivion(ObjectReference akReference) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akReference: The object reference to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 True if the reference is in Oblivion.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the box in Oblivion?
if IsRefInOblivion(Box)
    Debug.Trace("Box is in Oblivion!")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<itemizedlist><listitem><para> The following Worldspaces are considered Oblivion worldspaces:
</para></listitem><listitem><para> Soul Cairn
</para></listitem><listitem><para> Apocrypha
</para></listitem></itemizedlist><para>
</para>
</section>
<section>
<title>
FrostUtil/IsOblivionWorldspace</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Whether or not the worldspace is a base game or DLC Oblivion worldspace.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsOblivionWorldspace(Worldspace akWorldspace) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akWorldspace: The worldspace to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 True if the worldspace is a plane of Oblivion.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the box in Oblivion?
if IsOblivionWorldspace(infernal_realm)
    Debug.Trace("This is a plane of Oblivion!")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<itemizedlist><listitem><para> The following Worldspaces are considered Oblivion worldspaces by default:
</para></listitem><listitem><para> Soul Cairn
</para></listitem><listitem><para> Apocrypha
</para></listitem></itemizedlist><para>
</para>
</section>
<section>
<title>
FrostUtil/AddOblivionWorldspace</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a worldspace to the Oblivion worldspace list that Frostfall maintains. The player does not gain exposure when in planes of Oblivion.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddOblivionWorldspace(Worldspace akWorldspace) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Add my custom worldspace to the Oblivion worldspace list
FrostUtil.AddOblivionWorldspace(my_infernal_realm)
</literallayout>
</section>
<section>
<title>
FrostUtil/RemoveOblivionWorldspace</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Removes a worldspace from the Oblivion worldspace list that Frostfall maintains. The player does not gain exposure when in planes of Oblivion.
 Only Worldspace forms added to the list via <link linkend="robo19">AddOblivionWorldspace</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveOblivionWorldspace(Worldspace akWorldspace) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Remove my custom worldspace from the Oblivion worldspace list
FrostUtil.RemoveOblivionWorldspace(my_infernal_realm)
</literallayout>
</section>
<section>
<title>
FrostUtil/IsExposureException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 True if this form is in the exposure exception list that Frostfall maintains, false if not. When the player goes near this object (600 units or less),
 the player will not gain or lose exposure.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsExposureException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akBaseObject: The form to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 Whether or not this form is an exposure exception.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Will I turn off exposure mechanics near the dragon?
if FrostUtil.IsExposureException(SuperDragon)
    debug.notification("Guess I won't freeze to death near the Super Dragon.")
endif
</literallayout>
</section>
<section>
<title>
FrostUtil/AddExposureException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a form to the list of exposure exception objects that Frostfall maintains. When the player goes near this object (600 units or less),
 the player will not gain or lose exposure.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddExposureException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Suspend exposure gain and loss near the power stone
FrostUtil.AddExposureException(power_stone)
</literallayout>
</section>
<section>
<title>
FrostUtil/RemoveExposureException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Removes a form from the list of exposure exception objects that Frostfall maintains.
 Only forms added to the list via <link linkend="robo22">AddExposureException</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveExposureException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;No longer suspend exposure near the power stone
FrostUtil.RemoveExposureException(power_stone)
</literallayout>
</section>
<section>
<title>
FrostUtil/IsFastTravelException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 True if this form is in the fast travel exception list that Frostfall maintains, false if not. When the player goes near this object (600 units or less),
 fast travel controls will be re-enabled regardless of their fast travel settings.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsFastTravelException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akBaseObject: The form to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 Whether or not this form is a fast travel exception.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Will I enable fast travel near the carriage?
if FrostUtil.IsFastTravelException(carriage)
    debug.notification("Sally forth!")
endif
</literallayout>
</section>
<section>
<title>
FrostUtil/AddFastTravelException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a form to the list of fast travel exception objects that Frostfall maintains. When the player goes near this object (600 units or less),
 fast travel controls will be re-enabled regardless of their fast travel settings.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddFastTravelException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Enable fast travel when near the horse.
FrostUtil.AddFastTravelException(my_horse)
</literallayout>
</section>
<section>
<title>
FrostUtil/RemoveFastTravelException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Removes a form from the list of fast travel exception objects that Frostfall maintains.
 Only forms added to the list via <link linkend="robo25">AddFastTravelException</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveFastTravelException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;No longer enable fast travel near the horse
FrostUtil.RemoveFastTravelException(my_horse)
</literallayout>
</section>
<section>
<title>
FrostUtil/IsSleepException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 True if this form is in the sleep exception list that Frostfall maintains, false if not.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
bool function IsSleepException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akBaseObject: The form to check.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 Whether or not this weather is Overcast.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
if FrostUtil.IsSleepException(my_bedroll)
    debug.notification("Time to hit the sack!")
endif
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 When the player goes near this object (600 units or less),
 the player will be able to sleep. This is important if the player has "Disable Waiting Outdoors" enabled, which prevents
 sleeping unless near an object in this list.
</para>

<para>
 Tents created with the Campfire Dev Kit are automatically sleep exception objects. Conjured shelters are not and must
 be added using <link linkend="robo28">AddSleepException</link>().
</para>
</section>
<section>
<title>
FrostUtil/AddSleepException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a form to the list of sleep exception objects that Frostfall maintains. When the player goes near this object (600 units or less),
 the player will be able to sleep. This is important if the player has "Disable Waiting Outdoors" enabled, which prevents
 sleeping unless near an object in this list.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddSleepException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akBaseObject: The form to add.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Enable ability to sleep near my bedroll.
FrostUtil.AddSleepException(my_bedroll)
</literallayout>
</section>
<section>
<title>
FrostUtil/RemoveSleepException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Removes a form from the list of sleep exception objects that Frostfall maintains.
 Only forms added to the list via <link linkend="robo28">AddSleepException</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveSleepException(Form akBaseObject) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> akBaseObject: The form to remove.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;No longer enable fast travel near the horse
FrostUtil.RemoveSleepException(my_horse)
</literallayout>
</section>
<section>
<title>
FrostUtil/AddFastTravelWorldspaceException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a worldspace to the list of worldspaces that Frostfall maintains where fast travel controls should always be enabled.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function AddFastTravelWorldspaceException(Worldspace akWorldspace) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Add my custom worldspace to the fast travel exception worldspace list
FrostUtil.AddFastTravelWorldspaceException(my_realm)
</literallayout>
</section>
<section>
<title>
FrostUtil/RemoveFastTravelWorldspaceException</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Adds a worldspace to the list of worldspaces that Frostfall maintains where fast travel controls should always be enabled. 
 Only Worldspace forms added to the list via <link linkend="robo30">AddFastTravelWorldspaceException</link> can be removed.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 2
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function RemoveFastTravelWorldspaceException(Worldspace akWorldspace) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Remove my custom worldspace from the fast travel exception worldspace list
FrostUtil.RemoveFastTravelWorldspaceException(my_realm)
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerWetness</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Return the player's current wetness value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
float function GetPlayerWetness() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<itemizedlist><listitem><para> The player's current wetness value.
</para></listitem><listitem><para> 0.0 = Not wet
</para></listitem><listitem><para> &gt;0.0 - 199.9 = Damp
</para></listitem><listitem><para> 200.0 - 549.9 = Wet
</para></listitem><listitem><para> 550.0 - 750.0 = Drenched
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
float wetness = FrostUtil.GetPlayerWetness()
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerWetnessLevel</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Return the player's current wetness level. May be easier to use than <link linkend="robo32">GetPlayerWetness</link>() if you don't
 need to know the actual wetness value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerWetnessLevel() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<itemizedlist><listitem><para> The player's current wetness level.    
</para></listitem><listitem><para> 0 = Not wet
</para></listitem><listitem><para> 1 = Damp
</para></listitem><listitem><para> 2 = Wet
</para></listitem><listitem><para> 3 = Drenched
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player drenched?
int wet_level = FrostUtil.GetPlayerWetnessLevel()
if wet_level == 3
    debug.notification("You're soaked!")
endif
</literallayout>
</section>
<section>
<title>
FrostUtil/ModPlayerWetness</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Modify the player's current wetness by the given amount. Using this
 function will correctly process the wetness change and notify the UI layer
 (meters, etc) of the change and display them as appropriate. Using this function
 is the only safe method of directly modifying the player's wetness value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function ModPlayerWetness(float amount, float limit = -1.0) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> amount: The amount to modify the player's wetness by. Positive numbers increase wetness, negative values decrease wetness.
</para></listitem><listitem><para> limit (optional): The value at which you should stop the wetness change, if this value is reached. A value of -1.0 indicates that there is no limit. (Example: calling FrostUtil.ModPlayerWetness(35.0, 50.0) when the player's current wetness is 40.0 will increase the player's wetness to 50.0, not 75.0)
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;The player did something that should make them dry off.
FrostUtil.ModPlayerWetness(-15.0)
;The player did something that should make them dry off, but not below "Wet".
FrostUtil.ModPlayerWetness(-15.0, 200.0)
;The player did something that should make them wetter.
FrostUtil.ModPlayerWetness(20.0)
;The player did something that should make them wetter, but not above "Wet".
FrostUtil.ModPlayerWetness(20.0, 200.0)
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerExposure</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Return the player's current exposure value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
float function GetPlayerExposure() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<itemizedlist><listitem><para> The player's current exposure.
</para></listitem><listitem><para> 0.0 - 19.9 = Warm
</para></listitem><listitem><para> 20.0 - 39.9 = Comfortable
</para></listitem><listitem><para> 40.0 - 59.9 = Cold
</para></listitem><listitem><para> 60.0 - 79.9 = Very Cold
</para></listitem><listitem><para> 80.0 - 99.9 = Freezing
</para></listitem><listitem><para> 100.0 - 120.0 = Freezing to Death
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player cold?
float exp = FrostUtil.GetPlayerExposure()
if exp &gt;= 40.0
    debug.notification("Brrr!")
endif
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerExposureLevel</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Return the player's current exposure level. May be easier to use than <link linkend="robo35">GetPlayerExposure</link>() if you don't
 need to know the actual exposure value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerExposureLevel() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<itemizedlist><listitem><para> The player's current exposure level.
</para></listitem><listitem><para> -1 = Completely Warm
</para></listitem><listitem><para> 0 = Warm
</para></listitem><listitem><para> 1 = Comfortable
</para></listitem><listitem><para> 2 = Cold
</para></listitem><listitem><para> 3 = Very Cold
</para></listitem><listitem><para> 4 = Freezing
</para></listitem><listitem><para> 5 = Freezing to Death
</para></listitem><listitem><para> 6 = Maximum Exposure
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;Is the player cold?
float exp_level = FrostUtil.GetPlayerExposureLevel()
if exp_level &gt;= 2
    debug.notification("Brrr!")
endif
</literallayout>
</section>
<section>
<title>
FrostUtil/ModPlayerExposure</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Modify the player's current exposure by the given amount. Using this
 function will correctly process the exposure change and notify the UI layer
 (meters, etc) of the change and display them as appropriate. Using this function
 is the only safe method of directly modifying the player's exposure value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
function ModPlayerExposure(float amount, float limit = -1.0) global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> amount: The amount to modify the player's exposure by. Positive numbers increase exposure, negative values decrease exposure.
</para></listitem><listitem><para> limit (optional): The value at which you should stop the exposure change, if this value is reached. A value of -1.0 indicates that there is no limit. (Example: calling FrostUtil.ModPlayerExposure(35.0, 50.0) when the player's current exposure is 40.0 will increase the player's exposure to 50.0, not 75.0)
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;The player did something that should make them warmer.
FrostUtil.ModPlayerExposure(-15.0)
;The player did something that should make them warmer, but not below "Cold".
FrostUtil.ModPlayerExposure(-15.0, 40.0)
;The player did something that should make them colder.
FrostUtil.ModPlayerExposure(20.0)
;The player did something that should make them colder, but not above "Freezing".
FrostUtil.ModPlayerExposure(20.0, 80.0)
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerWarmth</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the player's total Warmth value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerWarmth() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The player's Warmth value.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;How bundled up is the player?
int warmth = FrostUtil.GetPlayerWarmth()
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerCoverage</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the player's total Coverage value.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerCoverage() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The player's Coverage value.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;How covered is the player?
int coverage = FrostUtil.GetPlayerCoverage()
</literallayout>
</section>
<section>
<title>
FrostUtil/GetPlayerArmorWarmth</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the sum of the Warmth values of all gear worn by the player.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerArmorWarmth() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The total Warmth of all player worn gear.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;How warm are the player's clothes?
int gear_warmth = FrostUtil.GetPlayerArmorWarmth()
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 There are many different sources of Warmth, so this function does not return
 the player's total Warmth value. If you want the total Warmth, use <link linkend="robo38">GetPlayerWarmth</link>() instead.
</para>
</section>
<section>
<title>
FrostUtil/GetPlayerArmorCoverage</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 Returns the sum of the Coverage values of all gear worn by the player.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
int function GetPlayerArmorCoverage() global
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>RETURN VALUE</title><para></para></formalpara>
<para>
 The total Coverage of all player worn gear.
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
;How warm are the player's clothes?
int gear_coverage = FrostUtil.GetPlayerArmorCoverage()
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 There are many different sources of Coverage, so this function does not return
 the player's total Coverage value. If you want the total Coverage, use <link linkend="robo39">GetPlayerCoverage</link>() instead.
</para>
</section>
<section>
<title>
FrostUtil/Frostfall_OnPlayerStartSwimming</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 An SKSE Mod Event that is raised when the player begins swimming.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Event Frostfall_OnPlayerStartSwimming()
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnInit()
    RegisterForModEvent("Frostfall_OnPlayerStartSwimming", "Frostfall_OnPlayerStartSwimming")
endEvent

Event Frostfall_OnPlayerStartSwimming()
    debug.notification("The player started swimming!")
endEvent
</literallayout>
</section>
<section>
<title>
FrostUtil/Frostfall_OnPlayerStopSwimming</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 An SKSE Mod Event that is raised when the player stops swimming.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Event Frostfall_OnPlayerStopSwimming()
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnInit()
    RegisterForModEvent("Frostfall_OnPlayerStopSwimming", "Frostfall_OnPlayerStopSwimming")
endEvent

Event Frostfall_OnPlayerStopSwimming()
    debug.notification("The player stopped swimming!")
endEvent
</literallayout>
</section>
<section>
<title>
FrostUtil/Frostfall_Loaded</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 An SKSE Mod Event that is raised when Frostfall is finished starting up, or after loading a save game with Frostfall enabled.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Event Frostfall_Loaded()
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<para>
 None
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnInit()
    RegisterForModEvent("Frostfall_Loaded", "Frostfall_Loaded")
endEvent

Event Frostfall_Loaded()
    debug.notification("Frostfall has finished starting up!")
endEvent
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 This event will only be raised if Frostfall is enabled. Therefore, don't rely
 on this event at game start-up for a critical function as you will not receive it
 until the player starts up Frostfall or loads a game with Frostfall already enabled.
</para>
</section>
<section>
<title>
FrostUtil/Frost_OnRescuePlayer</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 An SKSE Mod Event that is raised when the player is rescued when using the Max Exposure Rescue mechanic.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Event Frost_OnRescuePlayer(bool in_water)
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> in_water: Whether or not the player was swimming when they were rescued (mainly used by the rescue system to select a suitable destination).
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnInit()
    RegisterForModEvent("Frost_OnRescuePlayer", "Frost_OnRescuePlayer")
endEvent

Event Frost_OnRescuePlayer(bool in_water)
    debug.notification("The player was just rescued!")
endEvent
</literallayout>
</section>
<section>
<title>
FrostUtil/Frost_OnTamrielRegionChange</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 An SKSE Mod Event that is raised when the player moves from one tracked region to another.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnTamrielRegionChange(int region, bool in_region)
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> region: The ID of the region. See Notes for region IDs.
</para></listitem><listitem><para> in_region: If True, the player is entering this region. If False, the player is leaving it.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnInit()
    RegisterForModEvent("Frost_OnTamrielRegionChange", "Frost_OnTamrielRegionChange")
endEvent

Event Frost_OnTamrielRegionChange(int region, bool in_region)
    if in_region &amp;&amp; region == 11
        debug.notification("The player just entered Solstheim!")
    endif
endEvent
</literallayout>
<formalpara><title>NOTES</title><para></para></formalpara>
<para>
 The following are possible region IDs:
</para>
<itemizedlist><listitem><para> REGION_UNKNOWN = -1
</para></listitem><listitem><para> REGION_PINEFOREST = 1 
</para></listitem><listitem><para> REGION_VOLCANICTUNDRA = 2 
</para></listitem><listitem><para> REGION_FALLFOREST = 3 
</para></listitem><listitem><para> REGION_REACH = 4 
</para></listitem><listitem><para> REGION_TUNDRA = 5 
</para></listitem><listitem><para> REGION_TUNDRAMARSH = 6 
</para></listitem><listitem><para> REGION_COAST = 7 
</para></listitem><listitem><para> REGION_SNOW = 8 
</para></listitem><listitem><para> REGION_OBLIVION = 9 
</para></listitem><listitem><para> REGION_FALMERVALLEY = 10
</para></listitem><listitem><para> REGION_SOLSTHEIM = 11
</para></listitem><listitem><para> REGION_WYRMSTOOTH = 20
</para></listitem><listitem><para> REGION_DARKEND = 21
</para></listitem></itemizedlist><para>
</para>
</section>
<section>
<title>
FrostUtil/Frost_OnInnerFireMeditate</title>
<formalpara><title>DESCRIPTION</title><para></para></formalpara>
<para>
 An SKSE Mod Event that is raised when the player begins or ends using the Inner Fire ability.
</para>
<formalpara><title>API VERSION ADDED</title><para></para></formalpara>
<para>
 1
</para>
<formalpara><title>SYNTAX</title><para></para></formalpara>
<literallayout class="monospaced">
Event Frost_OnInnerFireMeditate(bool abMeditating)
</literallayout>
<formalpara><title>PARAMETERS</title><para></para></formalpara>
<itemizedlist><listitem><para> abMeditating: If True, the player entered the Inner Fire state. If False, they have just left it.
</para></listitem></itemizedlist><para>
</para>
<formalpara><title>EXAMPLES</title><para></para></formalpara>
<literallayout class="monospaced">
Event OnInit()
    RegisterForModEvent("Frost_OnInnerFireMeditate", "Frost_OnInnerFireMeditate")
endEvent

Event Frost_OnInnerFireMeditate(bool abMeditating)
    if abMeditating
        debug.notification("The player began meditating using Inner Fire!")
    endif
endEvent
</literallayout>
</section>
</article>
